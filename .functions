# Create a new directory and enter it
function mkd() {
    mkdir -p "$@" && cd "$_";
}

function docker_kill() {
    docker rm -f -v $(docker ps -a | grep "$@" | awk '{print $1}')
}

function ssv() {
    ssh -t $@ 'bash -o vi'
}

function fh() {
  print -z $( ([ -n "$ZSH_NAME" ] && fc -l 1 || history) | fzf +s --tac | sed 's/ *[0-9]* *//')
}

function fkill() {
  local pid
  pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')

  if [ "x$pid" != "x" ]
  then
    echo $pid | xargs kill -${1:-9}
  fi
}

function fd() {
  local dir
  dir=$(find ${1:-.} -type d -maxdepth 1 -mindepth 1 | fzf +m)
  cd "$dir"
}

# fdd - cd to selected directory
function fdd() {
  local dir
  dir=$(find ${1:-.} -path '*/\.*' -prune \
                  -o -type d -print 2> /dev/null | fzf +m) &&
  cd "$dir"
}

function fcall() {
  local subject
  subject=$(ls -a | fzf +m)
  eval "$@ $subject"
}

#  docker exec from running containers
function fdoex() {
    local container_name
    container_name=$(docker ps --format {{.Names}} | fzf)
    docker exec -e COLUMNS="`tput cols`" -e LINES="`tput lines`" -ti "$container_name" bash
}

#  docker kill
function fdokill() {
    docker rm -f -v $(docker ps -a --format {{.Names}} | fzf -m )
}

function fdormi() {
    local image
    local image_id
    image=$(docker images | fzf)
    image_id=$(echo $image | awk '{print $3}')
    docker rmi -f $image_id
}

function fcompreq() {
    local package_full
    local package
    package_full=$(composer search $@ | fzf)
    package=$(echo $package_full | cut -d ' ' -f 1)
    echo "Installing $package package"
    composer require "$package"
}

function fcompup() {
    local package
    package=$(composer info -s | cut -d ' ' -f 1 | fzf)
    composer update "$package"
}

function fmake() {
    local subject
    subject=$(egrep '^[a-zA-Z\-]+:{1}' Makefile | cut -d ':' -f 1 | fzf)
    make "$subject"
}
